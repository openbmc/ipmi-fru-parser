{
  "comments": [
    {
      "key": {
        "uuid": "4979ccf7_78f30c94",
        "filename": "strgfnhandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T14:43:36Z",
      "side": 1,
      "message": "Any reason this can\u0027t be a `size_t`?  I really dislike these \"force a variable to a specific size and hope we don\u0027t overflow\" kind of errors.\n\nThere are also potential uncaught overflows in `len` since line 95 memcpy\u0027s a single byte out of it (who knows if the endianness is even right for that).",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 12
      },
      "revId": "5a10a610b817d16003e1a1768d485dacb7bf3182",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63299485_5257015d",
        "filename": "strgfnhandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000854
      },
      "writtenOn": "2021-10-04T22:57:24Z",
      "side": 1,
      "message": "It could be a size_t. I just kept the initial approach by using uint16_t which is used in many different places into that code. Do you really want to switch that single variable to size_t ?",
      "parentUuid": "4979ccf7_78f30c94",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 12
      },
      "revId": "5a10a610b817d16003e1a1768d485dacb7bf3182",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53d22173_fabcfeeb",
        "filename": "strgfnhandler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-05T18:55:44Z",
      "side": 1,
      "message": "\u003e Do you really want to switch that single variable to size_t ?\n\nTo be honest, it isn\u0027t my repository to care.  I don\u0027t know why people get into this pattern of using size-specified integers and it leads to all sort of bugs, but somewhere they were taught at a young age that it leads to some mythical optimization, I suppose, which is usually false.  So, when I see it I cringe.\n\nIf there is lots of this pattern in the repo already it is probably better to clean those up as a separate commit.",
      "parentUuid": "63299485_5257015d",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 12
      },
      "revId": "5a10a610b817d16003e1a1768d485dacb7bf3182",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}